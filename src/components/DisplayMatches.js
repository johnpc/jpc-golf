import React, {Component} from "react";
// Typo generated by Amplify CLI
// Not sure how to correct this while maintaining infrastructure as code
import {listMatchs} from "../graphql/queries";
import {API, graphqlOperation} from "aws-amplify";
import {Table, Alert} from "antd";
import parseMatchData from "../utils/parseMatchData";

class DisplayMatches extends Component {
  state = {
    matches: [],
  };

  componentDidMount = async () => {
    const matches = await this.getMatches();
    this.setState({
      matches,
    });
  };

  getMatches = async () => {
    const result = await API.graphql(graphqlOperation(listMatchs));
    console.log("All matches", result.data.listMatchs.items);
    return result.data.listMatchs.items.sort((match, match2) => {
      return Date.parse(match.date) > Date.parse(match2.date);
    });
  };

  render() {
    const columns = [
      {
        title: "Name",
        dataIndex: "homeName",
        key: "homeName",
        render: (text) => <a>{text}</a>,
      },
      {
        title: "Handicap",
        dataIndex: "homeHandicap",
        key: "homeHandicap",
      },
      {
        title: "Raw Score",
        dataIndex: "homeRaw",
        key: "homeRaw",
      },
      {
        title: "Adj Score",
        dataIndex: "homeAdj",
        key: "homeAdj",
      },
      {
        title: "| VS |",
        dataIndex: "vs",
        key: "vs",
      },
      {
        title: "Name",
        dataIndex: "awayName",
        key: "awayName",
        render: (text) => <a>{text}</a>,
      },
      {
        title: "Handicap",
        dataIndex: "awayHandicap",
        key: "awayHandicap",
      },
      {
        title: "Raw Score",
        dataIndex: "awayRaw",
        key: "awayRaw",
      },
      {
        title: "Adj Score",
        dataIndex: "awayAdj",
        key: "awayAdj",
      },
    ];

    const {matches} = this.state;
    console.log(matches);
    if (matches.length === 0) {
      return <div>Loading... (no matches found)</div>;
    }
    console.log("rendering matches...");

    return matches.map((match) => {
      const data = parseMatchData(match);
      const homePoints = data.filter((datum) => datum.vs === "⬅️").length;
      const awayPoints = data.filter((datum) => datum.vs === "➡️").length;

      return (
        <div key={match.id}>
          <h1>
            {match.homeTeam.name} vs {match.awayTeam.name}:{" "}
            {new Date(match.date).toDateString()}
          </h1>
          <Alert
            message={
              homePoints > awayPoints
                ? `${match.homeTeam.name} is awarded ${homePoints} points`
                : `${match.awayTeam.name} is awarded ${awayPoints} points`
            }
            type="success"
          />
          <Alert
            message={
              homePoints < awayPoints
                ? `${match.homeTeam.name} is awarded ${homePoints} points`
                : `${match.awayTeam.name} is awarded ${awayPoints} points`
            }
            type="info"
          />
          <Table columns={columns} dataSource={data} pagination={false} />
        </div>
      );
    });
  }
}

export default DisplayMatches;
